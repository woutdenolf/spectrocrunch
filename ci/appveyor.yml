# Original script from https://github.com/silx-kit/pyFAI

version: "{build}"
shallow_clone: true
build: false

os:
    - Visual Studio 2015

cache:
    - '%LOCALAPPDATA%\pip\Cache'
    - '%CACHED_FOLDER%'

environment:
    global:
        WIN_SDK_ROOT: "C:\\Program Files\\Microsoft SDKs\\Windows"
        VENV_BUILD_DIR: "venv_build"
        VENV_TEST_DIR: "venv_test"
        CACHED_FOLDER: "%LOCALAPPDATA%\\cashed"

    matrix:
        # Python 2.7
        - PYTHON_DIR: "C:\\Python27-x64"
          PYTHON_VERSION: "2.7.11"
          PYTHON_ARCH: "64"
          BUILD_ARGS: ""

        # Python 3.4
        - PYTHON_DIR: "C:\\Python34-x64"
          PYTHON_VERSION: "3.4.3"
          PYTHON_ARCH: "64"
          # OpenMP is not available on python 3.4
          BUILD_ARGS: "--no-openmp"

        # Python 3.5
        - PYTHON_DIR: "C:\\Python35-x64"
          PYTHON_VERSION: "3.5.0"
          PYTHON_ARCH: "64"
          BUILD_ARGS: ""

    GEOS_PROJECT_FOLDER: "%CACHED_FOLDER%\\geos\\"
    GEOS_SOURCE_FOLDER: "%GEOS_PROJECT_FOLDER%\\libgeos"
    GEOS_BUILD_FOLDER: "%GEOS_PROJECT_FOLDER%\\build"
    GEOS_DLL_FOLDER: "%GEOS_BUILD_FOLDER%\\bin\\Release"

init:
  - "SET PATH=%GEOS_DLL_FOLDER%;%PATH%"
  - ps: |
      Write-Host "Build worker environment variables:" -ForegroundColor Magenta
      Get-ChildItem Env: | %{"{0}={1}" -f $_.Name,$_.Value}

install:
    # GEOS
    - ps: Write-Host "Cloning libgeos:" -ForegroundColor Magenta
    - "mkdir %GEOS_SOURCE_FOLDER%"
    - "mkdir %GEOS_BUILD_FOLDER%"
    - "cd %GEOS_PROJECT_FOLDER%"
    - "git clone https://github.com/libgeos/libgeos.git"
    - "cd %APPVEYOR_BUILD_FOLDER%"

    # Add Python to PATH
    - "SET PATH=%PYTHON_DIR%;%PYTHON_DIR%\\Scripts;%PATH%"

    # Upgrade/install distribution modules
    - "pip install --upgrade setuptools"
    - "python -m pip install --upgrade pip"

    # Install virtualenv
    - "pip install --upgrade virtualenv"
    - "virtualenv --version"

before_build:
    # GEOS (faster: /p:configuration=release ALL_BUILD.vcxproj)
    - ps: |
          cd $env:GEOS_BUILD_FOLDER
          if ($env:PYTHON_ARCH -eq "64") {
            $G="Visual Studio 14 2015 Win64"
          } else {
            $G="Visual Studio 14 2015"
          }
          Write-Host "Building libgeos:" -ForegroundColor Magenta
          Write-Host "Running CMake:" -ForegroundColor Magenta
          cmake.exe -G $G $env:GEOS_SOURCE_FOLDER 
          Write-Host "Running MSBuild:" -ForegroundColor Magenta
          msbuild GEOS.sln /maxcpucount /verbosity:quiet /p:Configuration=Release /clp:ErrorsOnly
          cd $env:APPVEYOR_BUILD_FOLDER

build_script:
    # Create build virtualenv
    - "virtualenv --clear %VENV_BUILD_DIR%"
    - "%VENV_BUILD_DIR%\\Scripts\\activate.bat"

    # Configure MSVC environment
    # Python 3.3 x64 and Python 3.4 x64 need a special configuration
    - ps: |
          If (($env:PYTHON_ARCH -eq "64") -And (($env:PYTHON_VERSION -Like "3.3.*") -Or ($env:PYTHON_VERSION -Like "3.4.*"))) {
            & "C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Bin\\SetEnv.cmd" /x64
          }

    # Install build dependencies
    - "pip install -r ci/requirements_appveyor.txt --upgrade"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"

    # Build
    - "del pyFAI\\ext\\histogram.c"
    - "python setup.py build %BUILD_ARGS%"
    - "python setup.py test"
    - "python setup.py bdist_wheel bdist_msi"
    - ps: "ls dist"
    - "pip install --pre --no-index --find-links dist/ Spectrocrunch"

    # Leave build virtualenv
    - "%VENV_BUILD_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_BUILD_DIR% /s /q"

test_script:
    # Test GEOS
    - ps: |
          cd $env:GEOS_BUILD_FOLDER
          Write-Host "Running libgeos CTest:" -ForegroundColor Magenta
          $cmd = 'ctest -V --output-on-failure'
          iex "& $cmd"
          if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
          cd $env:APPVEYOR_BUILD_FOLDER

    # Create test virtualenv
    - "virtualenv --clear %VENV_TEST_DIR%"
    - "%VENV_TEST_DIR%\\Scripts\\activate.bat"

    # Upgrade distribution modules
    - "python -m pip install --upgrade pip"
    - "pip install --pre --find-links dist/ Spectrocrunch"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"
    - "python setup.py test"

    # Leave test virtualenv
    - "%VENV_TEST_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_TEST_DIR% /s /q"

artifacts:
    # Archive the generated wheel package in the ci.appveyor.com build report.
    - path: dist\*
