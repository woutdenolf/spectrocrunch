version: "{build}"
shallow_clone: true
#build: false

cache:
  - '%LOCALAPPDATA%\pip\Cache'
  - '%CACHED_FOLDER%'

environment:
  global:
    VENV_NAME: "venv_build"
    CACHED_FOLDER: "%LOCALAPPDATA%\\cashed"

  matrix:
    - PYTHON_DIR: "C:\\Python27-x64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
    - PYTHON_DIR: "C:\\Python34-x64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013
      DISTUTILS_USE_SDK: "1"
    - PYTHON_DIR: "C:\\Python35-x64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_DIR: "C:\\Python36-x64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
    - PYTHON_DIR: "C:\\Python37-x64"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

init:
  # Prepare Python
  - ps: |
    [Environment]::SetEnvironmentVariable("Path", "$PYTHON_DIR;$PYTHON_DIR\Scripts;$Path", "Process")
    python -m ensurepip
    python -m pip install --upgrade setuptools
    python -m pip install --upgrade pip
    python -m pip install --upgrade virtualenv
    virtualenv --clear $VENV_NAME
    & .\$VENV_NAME\Scripts\activate.bat

  # before_install
  - ps: |
    Write-Host "Build worker environment variables:" -ForegroundColor Magenta
    Get-ChildItem Env: | %{"{0}={1}" -f $_.Name,$_.Value}
    mkdir $CACHED_FOLDER -Force
    cd $CACHED_FOLDER
    if ($OS -eq "Windows_NT") {
      $APPVEYOR_BUILD_FOLDER/ci/appveyor-windows-prepare.ps1
    }

install:
  # Install general build dependencies
  - ps: |
    cd $CACHED_FOLDER
    if ($OS -eq "Windows_NT") {
      $APPVEYOR_BUILD_FOLDER/tools/windows-install-deps.ps1 -y -u -x
    }
  
  # Print Python info
  - ps: |
    python $APPVEYOR_BUILD_FOLDER/ci/info_platform.py
    python -m pip list

build_script:
  # Build package
  - ps: |
    cd $APPVEYOR_BUILD_FOLDER
    python setup.py build
    python setup.py sdist bdist_wheel
    python setup.py build_doc

  # Install package
  - ps: |
    $PROJECTNAME = python setup.py name | Select-Object -Last 1
    python -m pip install --pre --no-index --find-links=dist/ $PROJECTNAME

test_script:
  # Test the installed package
  - ps: |
    cd $HOME
    python -m $PROJECTNAME.tests.test_all --log=error

on_finish:
  # Remove virtualenv
  - ps: |
    & .\$VENV_NAME\Scripts\deactivate.bat
    rmdir $VENV_NAME

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*
