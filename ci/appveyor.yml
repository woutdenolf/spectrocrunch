# Original script from https://github.com/silx-kit/pyFAI

version: "{build}"
shallow_clone: true
build: false

os:
    - Visual Studio 2015

#branches:
#  only:
#    - master
#    - production

cache:
    - '%LOCALAPPDATA%\pip\Cache'
    - '%CACHED_FOLDER%'

environment:
    global:
        WIN_SDK_ROOT: "C:\\Program Files\\Microsoft SDKs\\Windows"
        VENV_BUILD_DIR: "venv_build"
        VENV_TEST_DIR: "venv_test"

        CACHED_FOLDER: "%LOCALAPPDATA%\\cashed"

        GEOS_PROJECT_FOLDER: "%CACHED_FOLDER%\\geos"
        GEOS_SOURCE_FOLDER: "%GEOS_PROJECT_FOLDER%\\libgeos"
        GEOS_BUILD_FOLDER: "%GEOS_PROJECT_FOLDER%\\build"
        GEOS_DLL_FOLDER: "%GEOS_BUILD_FOLDER%\\bin\\Release"
        GEOS_LIBRARY_PATH: "%GEOS_DLL_FOLDER%\\geos_c.dll"

        OPENCL_PROJECT_FOLDER: "%CACHED_FOLDER%\\opencl"
        OPENCL_INCLUDE_FOLDER: "%OPENCL_PROJECT_FOLDER%\\inc"
        OPENCL_BUILD_FOLDER: "%OPENCL_PROJECT_FOLDER%\\lib"

        MSINTTYPES_FOLDER: "%CACHED_FOLDER%\\msinttypes"

    matrix:
        # Python 2.7
        - PYTHON_DIR: "C:\\Python27-x64"
          PYTHON_VERSION: "2.7.11"
          PYTHON_ARCH: "64"
          BUILD_ARGS: ""

        ## Python 3.4
        #- PYTHON_DIR: "C:\\Python34-x64"
        #  PYTHON_VERSION: "3.4.3"
        #  PYTHON_ARCH: "64"
        #  # OpenMP is not available on python 3.4
        #  BUILD_ARGS: "--no-openmp"

        ## Python 3.5
        #- PYTHON_DIR: "C:\\Python35-x64"
        #  PYTHON_VERSION: "3.5.0"
        #  PYTHON_ARCH: "64"
        #  BUILD_ARGS: ""

init:
  - ps: |
      Write-Host "Build worker environment variables:" -ForegroundColor Magenta
      Get-ChildItem Env: | %{"{0}={1}" -f $_.Name,$_.Value}

install:
    # GEOS
    - ps: Write-Host "Cloning libgeos:" -ForegroundColor Magenta
    - "mkdir %GEOS_SOURCE_FOLDER%"
    - "mkdir %GEOS_BUILD_FOLDER%"
    - "cd %GEOS_PROJECT_FOLDER%"
    - "IF NOT EXIST $env:GEOS_LIBRARY_PATH git clone https://github.com/libgeos/libgeos.git"
    - "cd %APPVEYOR_BUILD_FOLDER%"

    # Missing C99 headers for MSVC
    - "mkdir %MSINTTYPES_FOLDER%"
    - "cd %MSINTTYPES_FOLDER%"
    - ps: Start-FileDownload ('https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/msinttypes/msinttypes-r26.zip' ) msinttypes.zip
    - 7z e msinttypes.zip
    - "SET INCLUDE=%INCLUDE%;%MSINTTYPES_FOLDER%"
    - "cd %APPVEYOR_BUILD_FOLDER%"

    # Download OpenCL Headers
    - ps: |
          mkdir $env:OPENCL_PROJECT_FOLDER
          cd $env:OPENCL_PROJECT_FOLDER
          wget https://www.khronos.org/registry/cl/specs/opencl-icd-1.2.11.0.tgz -OutFile opencl-icd-1.2.11.0.tgz
          7z x opencl-icd-1.2.11.0.tgz > $null
          7z x opencl-icd-1.2.11.0.tar > $null
          mv .\icd\* .
          mkdir inc/CL
          wget https://github.com/KhronosGroup/OpenCL-Headers | select -ExpandProperty links | where {$_.href -like "*.h*"} | select -ExpandProperty outerText | foreach{ wget https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/master/$_ -OutFile inc/CL/$_ }
          mkdir lib
          cd $env:APPVEYOR_BUILD_FOLDER

    # Add Python to PATH
    - "SET PATH=%PYTHON_DIR%;%PYTHON_DIR%\\Scripts;%PATH%"

    # Upgrade/install distribution modules
    - "pip install --upgrade setuptools"
    - "python -m pip install --upgrade pip"

    # Install virtualenv
    - "pip install --upgrade virtualenv"
    - "virtualenv --version"

build_script:
    # Create build virtualenv
    - "virtualenv --clear %VENV_BUILD_DIR%"
    - "%VENV_BUILD_DIR%\\Scripts\\activate.bat"

    # Build the ICD loader
    - cd %OPENCL_BUILD_FOLDER%
    - cmake --help
    - cmake -G "NMake Makefiles" ..
    - nmake
    - cd %APPVEYOR_BUILD_FOLDER%

    # Configure MSVC environment
    # Python 3.3 x64 and Python 3.4 x64 need a special configuration
    - ps: |
          If (($env:PYTHON_ARCH -eq "64") -And (($env:PYTHON_VERSION -Like "3.3.*") -Or ($env:PYTHON_VERSION -Like "3.4.*"))) {
            & "C:\\Program Files\\Microsoft SDKs\\Windows\\v7.1\\Bin\\SetEnv.cmd" /x64
          }

    # Build GEOS
    - ps: |
          if (!(Test-Path $env:GEOS_LIBRARY_PATH)) {
            cd $env:GEOS_BUILD_FOLDER
            if ($env:PYTHON_ARCH -eq "64") {
              $G="Visual Studio 14 2015 Win64"
            } else {
              $G="Visual Studio 14 2015"
            }
            Write-Host "Building libgeos:" -ForegroundColor Magenta
            Write-Host "Running CMake:" -ForegroundColor Magenta
            cmake -G $G $env:GEOS_SOURCE_FOLDER 
            Write-Host "Running MSBuild:" -ForegroundColor Magenta
            msbuild GEOS.sln /maxcpucount /v:quiet /p:Configuration=Release /clp:ErrorsOnly
            cd $env:APPVEYOR_BUILD_FOLDER
          }
    - "SET PATH=%GEOS_DLL_FOLDER%;%PATH%"

    # Install build dependencies
    #- "pip install -r ci/requirements_appveyor.txt --upgrade"
    - "pip install --trusted-host www.silx.org --find-links http://www.silx.org/pub/wheelhouse/ -r ci/requirements_appveyor.txt --upgrade"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"

    # Build
    - "python setup.py build %BUILD_ARGS%"
    - "python setup.py test"
    - "python setup.py bdist_wheel bdist_msi"
    - ps: "ls dist"
    - "pip install --pre --no-index --find-links dist/ Spectrocrunch"

    # Leave build virtualenv
    - "%VENV_BUILD_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_BUILD_DIR% /s /q"

test_script:
    # Test GEOS
    - ps: |
          cd $env:GEOS_BUILD_FOLDER
          Write-Host "Running libgeos CTest:" -ForegroundColor Magenta
          $cmd = 'ctest -V --output-on-failure'
          iex "& $cmd"
          if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
          cd $env:APPVEYOR_BUILD_FOLDER

    # Create test virtualenv
    - "virtualenv --clear %VENV_TEST_DIR%"
    - "%VENV_TEST_DIR%\\Scripts\\activate.bat"

    # Upgrade distribution modules
    - "python -m pip install --upgrade pip"
    - "pip install --pre --find-links dist/ Spectrocrunch"

    # Print Python info
    - "python ci\\info_platform.py"
    - "pip list"
    - "python setup.py test"

    # Leave test virtualenv
    - "%VENV_TEST_DIR%\\Scripts\\deactivate.bat"
    - "rmdir %VENV_TEST_DIR% /s /q"

artifacts:
    # Archive the generated wheel package in the ci.appveyor.com build report.
    - path: dist\*
