
# This file was *autogenerated* from the file elscattering.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_1j = ComplexNumber(0, '1'); _sage_const_4 = Integer(4)#!/usr/bin/env sage

from sage.all import *
var('theta,phi,S0,S1,S2,S3,psi,dolp,a,b,s,hdolp',domain='real')

S = vector([S0,S1,S2,S3])

def MuellerMatrixRotation(angle):
    return matrix(SR,_sage_const_4 ,_sage_const_4 ,[_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,cos(_sage_const_2 *angle),-sin(_sage_const_2 *angle),_sage_const_0 ,_sage_const_0 ,sin(_sage_const_2 *angle),cos(_sage_const_2 *angle),_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ])
    
def JonesMatrixThomson(angle):
    return matrix(SR,_sage_const_2 ,_sage_const_2 ,[_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,cos(angle)])

def jones_to_mueller(M):
    pauli44 = matrix(SR,_sage_const_4 ,_sage_const_4 ,[_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,-_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1j ,-_sage_const_1j ,_sage_const_0 ])
    return (pauli44 * M.tensor_product(M.H) * pauli44.H)/_sage_const_2 
 
M1 = MuellerMatrixRotation(phi)#.substitute(phi=pi/2).simplify()
M2 = jones_to_mueller(JonesMatrixThomson(theta)).substitute(theta = acos(sqrt(_sage_const_2 *a-_sage_const_1 ))).simplify()
M = (M2*M1).simplify()
print(M)
S_scat = M*S

S_scat = S_scat.simplify()
S_scat = S_scat.substitute(S2=b*S1).simplify()
S_scat = S_scat.substitute(S1=s*(S0*dolp)/sqrt(_sage_const_1 +b**_sage_const_2 )).simplify()
print(S_scat[_sage_const_0 ])

#S_scat = S_scat.substitute(S2=b*S1).simplify()
#S_scat = S_scat.substitute(S1=hdolp*S0).simplify()
#print(S_scat[0])


